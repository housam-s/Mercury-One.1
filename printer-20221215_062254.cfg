
 # This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.
[include print_area_bed_mesh.cfg]
[include speedtest.cfg]

[exclude_object]
[mcu rpi]
serial: /tmp/klipper_host_mcu
[respond]
default_type: command

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 50  # default is 75
probe_points:
    110, 110, 20  # an example

    




[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40.000
endstop_pin: ^PC0
position_endstop: 235
position_max: 235
position_min: -25
homing_speed: 150

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 1.200
hold_current: 1.000
#stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40.000
endstop_pin: ^PC1
position_min: -10
position_endstop: 235
position_max: 235
homing_speed: 150

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 1.200
hold_current: 1.000
#stealthchop_threshold: 999999


[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
endstop_pin: probe:z_virtual_endstop
position_max: 300
position_min: -10
homing_speed: 50
homing_retract_dist: 5
microsteps: 16
rotation_distance: 4
#homing_positive_dir:true

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.650
hold_current: 0.650
#stealthchop_threshold: 999999

[skew_correction]



[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -36.0
y_offset: -1.00
#z_offset: 0.84
pin_move_time:0.3
pin_up_touch_mode_reports_triggered:true
stow_on_each_sample: false
samples: 2
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

[gcode_macro start_print]
gcode:
  LED_ON  
  G28
 # BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX} FORCE_NEW_MESH=True
  
  

  
[bed_mesh]
speed: 300
horizontal_move_z: 3
mesh_min: -5,40
mesh_max: 199,210
probe_count:5,5
mesh_pps: 2,2


[safe_z_home]
home_xy_position: 136, 120
speed: 300
z_hop: 5
z_hop_speed: 50



[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 5.5 #23 old value
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
#sensor_type: EPCOS 100K B57560G104F
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA0
max_extrude_cross_section: 50.0
max_extrude_only_distance: 200
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300
pressure_advance = 0.0600 #PLA
#pressure_advance = 0.0525 #PLA
#pressure_advance = 0.0650 #PETG


[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 1.000
hold_current: 1.000
#stealthchop_threshold: 999999




[input_shaper]

[screws_tilt_adjust]
screw1: 50,40
screw1_name: front left screw
screw2: 220,40
screw2_name: front right screw
screw3: 220,210
screw3_name: rear right screw
screw4: 50,210
screw4_name: rear left screw
horizontal_move_z: 5
speed: 150
screw_thread: CW-M4



[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2B0020000250415339373620-if00



[printer]
kinematics: corexy
max_velocity: 500
max_accel: 25000
max_accel_to_decel:12500
max_z_velocity: 15
max_z_accel: 100
square_corner_velocity:10.0

[static_digital_output usb_pullup_enable]
pins: !PA14

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
[gcode_macro M0]
description: Pause the actual running print
# change this if you need more or less extrusion
gcode: PAUSE

[gcode_macro PURGE]
gcode:
  M117 PURGING..
  G91
  G1 E50 F250
  G90
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G0 235 235
  M107
  M84


[gcode_macro LED_OFF]
gcode:
  {action_call_remote_method("set_device_power",
                             device="light_strip",
                             state="off")}
                            
[gcode_macro LED_ON]
gcode:
  {action_call_remote_method("set_device_power",
                             device="light_strip",
                             state="on")}

[idle_timeout]
gcode:  
  LED_OFF
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 600

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100


[temperature_sensor SKR Mini_E3_V3]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[gcode_macro M600]
gcode:
    {% set X = params.X|default(220)|float %}
    {% set Y = params.Y|default(220)|float %}
    {% set Z = params.Z|default(50)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-100 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[filament_switch_sensor runout]
switch_pin:^PC2
pause_on_runout: False
runout_gcode:
  M600
  M117 NO FILAMENT

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.354
#*# pid_ki = 1.596
#*# pid_kd = 64.879
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.943
#*# pid_ki = 1.591
#*# pid_kd = 768.500
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.066250, -0.074375, -0.080625
#*# 	  -0.023125, -0.034375, -0.045625
#*# 	  -0.030625, 0.019375, -0.038125
#*# 	  -0.038125, -0.013750, -0.045625
#*# 	  -0.051250, -0.038750, -0.056875
#*# tension = 0.2
#*# min_x = 29.15
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 49.15
#*# x_count = 3
#*# max_y = 185.83
#*# mesh_x_pps = 2
#*# max_x = 165.83
#*#
#*# [bltouch]
#*# z_offset = 1.369
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 113.4
#*# shaper_type_y = zv
#*# shaper_freq_y = 113.4
#*#
#*# [skew_correction my_skew_profile]
#*# xy_skew = 0.00350298880098
#*# xz_skew = 0.0
#*# yz_skew = 0.0
